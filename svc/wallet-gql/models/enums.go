// Code generated by lab.weave.nl/weave/generator, DO NOT EDIT.

package models

import (
	"database/sql/driver"
	"fmt"
	"io"
	"strconv"

	generr "lab.weave.nl/weave/generator/pkg/errors"
)

// PhoneNumberVerificationType Enum
type PhoneNumberVerificationType int64

const (
	PhoneNumberVerificationTypeSMS PhoneNumberVerificationType = 1
	PhoneNumberVerificationTypeTTS PhoneNumberVerificationType = 2
)

var phoneNumberVerificationTypeStrings = map[int64]string{
	1: "SMS",
	2: "TTS",
}

var phoneNumberVerificationTypeStringMap = map[string]PhoneNumberVerificationType{
	"SMS": PhoneNumberVerificationTypeSMS,
	"TTS": PhoneNumberVerificationTypeTTS,
}

var phoneNumberVerificationTypeGQLStrings = map[int64]string{
	1: "SMS",
	2: "TTS",
}

var phoneNumberVerificationTypeGQLStringMap = map[string]PhoneNumberVerificationType{
	"SMS": PhoneNumberVerificationTypeSMS,
	"TTS": PhoneNumberVerificationTypeTTS,
}

func (u *PhoneNumberVerificationType) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return generr.ErrEnumsMustBeStrings
	}

	*u, ok = phoneNumberVerificationTypeGQLStringMap[str]
	if !ok {
		return fmt.Errorf("%w: %s for enum PhoneNumberVerificationType", generr.ErrNotAValidEnumValue, str)
	}
	return nil
}

func (u PhoneNumberVerificationType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(u.GQLString()))
}

func (u *PhoneNumberVerificationType) Scan(value interface{}) error {
	i, ok := value.(int64)
	if !ok {
		return fmt.Errorf("%w: %v", generr.ErrCouldNotCastEnumValueToInt64, value)
	}
	*u = PhoneNumberVerificationType(i)
	return nil
}

func (u *PhoneNumberVerificationType) ScanFromString(name string) error {
	var ok bool
	*u, ok = phoneNumberVerificationTypeStringMap[name]
	if !ok {
		return fmt.Errorf("%w: %s for enum PhoneNumberVerificationType", generr.ErrNotAValidNameForEnumValue, name)
	}
	return nil
}

func (u *PhoneNumberVerificationType) ScanFromGQLString(name string) error {
	var ok bool
	*u, ok = phoneNumberVerificationTypeGQLStringMap[name]
	if !ok {
		return fmt.Errorf("%w: %s for enum PhoneNumberVerificationType", generr.ErrNotAValidEnumValue, name)
	}
	return nil
}

func (u PhoneNumberVerificationType) Value() (driver.Value, error) { return int64(u), nil }

func (u PhoneNumberVerificationType) String() string {
	if u == 0 {
		return "undefined"
	}
	return phoneNumberVerificationTypeStrings[int64(u)]
}

func (u PhoneNumberVerificationType) GQLString() string {
	if u == 0 {
		return "UNDEFINED"
	}
	return phoneNumberVerificationTypeGQLStrings[int64(u)]
}

func (u PhoneNumberVerificationType) AllStrings() map[int64]string {
	return phoneNumberVerificationTypeStrings
}
