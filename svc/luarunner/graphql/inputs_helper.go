// Code generated by lab.weave.nl/weave/generator, DO NOT EDIT.

package graphql

import (
	"context"

	"github.com/nID-sourcecode/nid-core/svc/luarunner/models"
)

func (t *CreateScript) ToModel(ctx context.Context, r *Resolver) (m models.Script, err error) {
	m.EventType = t.EventType
	m.OrganisationID = t.OrganisationID
	m.Script = t.Script
	return m, nil
}

func (t *CreateScript) containsField(field string) bool {
	switch field {
	}
	return false
}

func (t *UpdateScript) ToModel(ctx context.Context, r *Resolver) (m models.Script, err error) {
	if t.EventType != nil {
		m.EventType = *t.EventType
	}
	if t.OrganisationID != nil {
		m.OrganisationID = *t.OrganisationID
	}
	if t.Script != nil {
		m.Script = *t.Script
	}
	return m, nil
}

func (t *UpdateScript) containsField(field string) bool {
	switch field {
	case "EventType":
		if t.EventType != nil {
			return true
		}
	case "OrganisationID":
		if t.OrganisationID != nil {
			return true
		}
	case "Script":
		if t.Script != nil {
			return true
		}
	}
	return false
}
