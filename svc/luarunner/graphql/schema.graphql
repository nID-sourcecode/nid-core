# Code generated by lab.weave.nl/weave/generator, DO NOT EDIT.

scalar Time
scalar UUID

enum OrderDirection {
  ASC
  DESC
}

schema {
  query: Query
  mutation: Mutation
}

type Query {
  script(id: UUID!): Script!
  scripts(limit: Int = 100, offset: Int = -1, filter: ScriptFilterInput, orderBy: String @deprecated(reason: "use order instead"), order: ScriptFieldName! = CREATED_AT, orderDirection: OrderDirection! = ASC): [Script!]!
}

type Mutation {
  # Script Mutations
  createScript(input: CreateScript!): Script!
  updateScript(id: UUID!, input: UpdateScript!): Script!
}

directive @hasScriptAccess on FIELD_DEFINITION

type Script {
  id: UUID! @hasScriptAccess                          # primary key
  eventType: String! @hasScriptAccess
  organisationId: UUID! @hasScriptAccess
  script: String! @hasScriptAccess
  createdAt: Time! @hasScriptAccess
  deletedAt: Time @hasScriptAccess
  updatedAt: Time! @hasScriptAccess
}

input CreateScript {
  eventType: String!
  organisationId: UUID!
  script: String!
}

input UpdateScript {
  eventType: String
  organisationId: UUID
  script: String
}

enum ScriptFieldName {
  ID
  EVENT_TYPE
  ORGANISATION_ID
  SCRIPT
  CREATED_AT
  DELETED_AT
  UPDATED_AT
}

input ScriptFilterInput {
  id: UUIDFilterInput
  eventType: StringFilterInput
  organisationId: UUIDFilterInput
  script: StringFilterInput
  createdAt: TimeFilterInput
  deletedAt: TimeFilterInput
  updatedAt: TimeFilterInput
  unscoped: Boolean

  not: ScriptFilterInput
  or: [ScriptFilterInput!]
  and: [ScriptFilterInput!]
}

input StringFilterInput {
  beginsWith: String
  contains: String
  endsWith: String
  eq: String
  ge: String
  gt: String
  le: String
  lt: String
  ne: String

  isSet: Boolean
  not: StringFilterInput
}

input TimeFilterInput {
  eq: Time
  ge: Time
  gt: Time
  le: Time
  lt: Time
  ne: Time

  isSet: Boolean
  not: TimeFilterInput
}

input UUIDFilterInput {
  eq: UUID
  ne: UUID

  isSet: Boolean
  not: UUIDFilterInput
}

